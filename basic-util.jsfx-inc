@init

// manage array pointers allocation
nextPointer = 1000;
function createArray(amount) local(array) (
  array = nextPointer;
  nextPointer += amount;
  nextPointer == srate ? nextPointer = 1000;

  array;
);
function createArrayAndInit(amount, defaultValue) local(array, i) (
  array = createArray(amount);
  i = 0;
  loop(amount, array[i] = defaultValue; i += 1;);

  array;
);


//Wrap the sample two sides in an "object"
function getSample(left, right) (
  this.left = left;
  this.right = right;
);

//Must be called with sample as 'this'
function getAbsoluteVolume() (
  (abs(this.left) + abs(this.right)) / 2;
);


//conversion function
function convertRatioToDbGain(ratio) (
  20 * log10(ratio);
);
function convertRmsToDb(ratio) (
  convertRatioToDbGain(ratio) + 5; //I don't yet know why it's needed... Maybe because of a specific signal level referential?
);
function convertDbGainToRatio(gain) (
  10^(gain/20);
);
function convertDbLevelToRatio(gain) (
  convertDbGainToRatio(gain-5);
);
function round(value, precision) local(power) (
  power = 10^precision;
  ceil(value * power) / power;
);


//Math tools
function average(array, length) local(sum, average, differenceSum, i) (
    sum = i = 0;

    loop(length, sum += array[i]; i += 1);
    average = sum / length;

    average;
);

function standardDeviation(array, length) local(average, differenceSum, i) (
    average = average(array, length);

    differenceSum = i = 0;
    loop(length, differenceSum += (average - array[i])^2; i += 1);

    sqrt(differenceSum / length);
);

function acceleration(array, length, startIndex) local(sum, i1, i2) (
    sum = 0;
    i1 = startIndex;
    i2 = startIndex + 1;

    loop(length - 1,
        i1 == length ? i1 = 0;
        i2 == length ? i2 = 0;

        sum += (array[i2] - array[i1]);

        i1 += 1;
        i2 += 1;
    );

    sum / (length - 1);
);